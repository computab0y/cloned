apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dso-sample-pl
spec:
  params:
  - name: GIT_URL
    type: string
    description: The git source code repository URL to clone from.
    default: needs-repo-name
  - name: MANIFEST_GIT_URL
    type: string
    description: The git infra as code repository URL to clone from.
    default: needs-repo-name
  - name: REVISION
    type: string
    description: The git branch to clone.
  - name: MANIFEST_REVISION
    type: string
    description: The git manifest branch to clone.
  - name: SERVICE_NAME
    type: string  
  - name: SERVICE_VERSION
    type: string
    default: latest
  - name: IMAGE_REPOSITORY
    type: string
  - name: REPO_NAME
    type: string
    default: needs-repo-name
  - name: KUSTOMIZATION_PATH
    type: string
  - name: DEFAULT_IMAGE
    type: string
  - name: SONAR_HOST_URL
    type: string
    default: https://sonarqube-https-dso-tooling-sonar.apps.ocp1.azure.dso.digital.mod.uk/
  - name: SONAR_PROJECT_KEY
    type: string   
  - name: VAULT_NAMESPACE
    type: string        
      
  workspaces:
  - name: shared-data
    description: |
      This workspace will receive the cloned git repo and be passed
      to the next Task for the repo's README.md file to be read.
  tasks:
  - name: fetch-repo
    params:
      - name: url
        value: $(params.GIT_URL)
      - name: revision
        value: $(params.REVISION)  
      - name: subdirectory
        value: $(params.REPO_NAME)
     # - name: cluster_name
     #   value: "$(params.CLUSTER_NAME)"
      - name: useVault
        value: 'false'
      - name: vaultRole
        value: pipeline-github # Does not need to be provided as it matches default value, although here for illustrative purposes.
      - name: vaultNamespace
        value: $(params.VAULT_NAMESPACE) # per our example our secrets are stored in the 'team1' namespace 
      - name: vaultPath
        value: kv/data/github # per our example our secrets are stored in 'pipeline'
        
    taskRef:
      kind: ClusterTask
      name: vault-git-clone
    workspaces:
      - name: output
        workspace: shared-data
        
  - name: vault-sonarqube-scanner
    params:
    - name: SONAR_HOST_URL
      value: "$(params.SONAR_HOST_URL)"
    - name: SONAR_PROJECT_KEY
      value: "$(params.SONAR_PROJECT_KEY)"
    - name: REPO_NAME
      value: "$(params.REPO_NAME)"
    - name: IMAGE_REPOSITORY
      value: "$(params.IMAGE_REPOSITORY)"
    - name: useVault
      value: 'true'
    - name: vaultRole
      value: pipeline-sonar
    - name: vaultNamespace
      value: $(params.VAULT_NAMESPACE)
    - name: vaultPath
      value: kv/data/sonar
    taskRef:
      kind: ClusterTask
      name: vault-sonarqube-scanner
    workspaces:
    - name: source-dir
      workspace: shared-data
    - name: sonar-settings
      workspace: shared-data
    runAfter:
    - fetch-repo

  - name: build-service
    taskRef:
      kind: ClusterTask
      name: vault-build-image
    params:
      - name: SERVICE_NAME
        value: "$(params.SERVICE_NAME)"
      - name: IMAGE_REPOSITORY
        value: "$(params.IMAGE_REPOSITORY)"
      - name: SERVICE_VERSION
        value: "$(params.SERVICE_VERSION)"
      - name: REPO_NAME
        value: "$(params.REPO_NAME)"
      - name: CONTEXT
        value: "$(params.REPO_NAME)"   
      - name: vaultRole
        value: pipeline-quay
      - name: vaultNamespace
        value: $(params.VAULT_NAMESPACE)
      - name: vaultPath
        value: kv/data/quay        
    workspaces:
      - name: source
        workspace: shared-data
    runAfter: 
      - vault-sonarqube-scanner

  - name: fetch-manifest-repo
    params:
      - name: url
        value: "$(params.MANIFEST_GIT_URL)"
      - name: manifest-revision
        value: $(params.MANIFEST_REVISION)  
      - name: vaultRole
        value: pipeline-github
      - name: vaultNamespace
        value: $(params.VAULT_NAMESPACE)
      - name: useVault
        value: 'true'
      - name: vaultPath
        value: kv/data/github  
      - name: manifest
        value: 'true'
    taskRef:
      kind: ClusterTask
      name: vault-git-clone
    workspaces:
      - name: output
        workspace: shared-data
    runAfter:
      - build-service

  - name: manifest-update
    params:
      - name: KUSTOMIZATION_PATH
        value: $(params.KUSTOMIZATION_PATH)
      - name: DEFAULT_IMAGE
        value: $(params.DEFAULT_IMAGE)
      - name: IMAGE_REPOSITORY
        value: $(params.IMAGE_REPOSITORY)
      - name: manifest-revision
        value: $(params.MANIFEST_REVISION) 
      - name: SERVICE_NAME
        value: $(params.SERVICE_NAME)
      - name: SERVICE_VERSION
        value: $(params.SERVICE_VERSION)
      - name: useVault
        value: 'true'
      - name: vaultRole
        value: pipeline-github
      - name: vaultNamespace
        value: $(params.VAULT_NAMESPACE)
      - name: vaultPath
        value: kv/data/github
    runAfter:
      - fetch-manifest-repo
    taskRef:
      kind: ClusterTask
      name: vault-git-update-deployment
    workspaces:
      - name: workspace
        workspace: shared-data
